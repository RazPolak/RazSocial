{"ast":null,"code":"var _jsxFileName = \"/home/raz/Projects/socialNet-dj-reactRedux/frontend/social/src/Components/Posts.js\";\nimport React, { Component } from \"react\";\nimport { fetchPosts, fetchLatestPost } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    let userName = this.props.location.pathname.substring(6);\n    console.log(userName); // userName = userName.substring(6);\n    // console.log(userName);\n\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    const newPost = nextProps.newPost;\n\n    if (!(Object.entries(newPost).length === 0 && newPost.constructor === Object)) {\n      this.props.fetchLatestPost();\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => React.createElement(ListGroup.Item, {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, post.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), post.body, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), post.user));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, postItems);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item,\n  isLogged: state.user.isLogged\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  fetchPosts,\n  fetchLatestPost\n})(Posts));","map":{"version":3,"sources":["/home/raz/Projects/socialNet-dj-reactRedux/frontend/social/src/Components/Posts.js"],"names":["React","Component","fetchPosts","fetchLatestPost","connect","PropTypes","withRouter","ListGroup","Posts","componentDidMount","console","log","props","userName","location","pathname","substring","componentWillReceiveProps","nextProps","newPost","Object","entries","length","constructor","render","postItems","posts","map","post","id","title","body","user","propTypes","func","isRequired","array","mapStateToProps","state","items","item","isLogged"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,QAAIC,QAAQ,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,QAApB,CAA6BC,SAA7B,CAAuC,CAAvC,CAAf;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAHkB,CAIlB;AACA;;AACA,SAAKD,KAAL,CAAWV,UAAX;AACD;;AAEDe,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACA,UAAMC,OAAO,GAAGD,SAAS,CAACC,OAA1B;;AAEA,QACE,EAAEC,MAAM,CAACC,OAAP,CAAeF,OAAf,EAAwBG,MAAxB,KAAmC,CAAnC,IAAwCH,OAAO,CAACI,WAAR,KAAwBH,MAAlE,CADF,EAEE;AACA,WAAKR,KAAL,CAAWT,eAAX;AACD;AACF;;AAEDqB,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IACzC,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGF,IAAI,CAACG,IAHR,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGH,IAAI,CAACI,IALR,CADgB,CAAlB;AASA,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYP,SAAZ,CAAP;AACD;;AAhC2B;;AAmC9BjB,KAAK,CAACyB,SAAN,GAAkB;AAChB/B,EAAAA,UAAU,EAAEG,SAAS,CAAC6B,IAAV,CAAeC,UADX;AAEhBT,EAAAA,KAAK,EAAErB,SAAS,CAAC+B,KAAV,CAAgBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYa,KADa;AAEhCpB,EAAAA,OAAO,EAAEmB,KAAK,CAACZ,KAAN,CAAYc,IAFW;AAGhCC,EAAAA,QAAQ,EAAEH,KAAK,CAACN,IAAN,CAAWS;AAHW,CAAL,CAA7B;;AAMA,eAAenC,UAAU,CACvBF,OAAO,CACLiC,eADK,EAEL;AAAEnC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFK,CAAP,CAGEK,KAHF,CADuB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { fetchPosts, fetchLatestPost } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    let userName = this.props.location.pathname.substring(6);\n    console.log(userName);\n    // userName = userName.substring(6);\n    // console.log(userName);\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    const newPost = nextProps.newPost;\n\n    if (\n      !(Object.entries(newPost).length === 0 && newPost.constructor === Object)\n    ) {\n      this.props.fetchLatestPost();\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <ListGroup.Item key={post.id}>\n        <h4>{post.title}</h4>\n        <br />\n        {post.body}\n        <br />\n        {post.user}\n      </ListGroup.Item>\n    ));\n    return <ListGroup>{postItems}</ListGroup>;\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item,\n  isLogged: state.user.isLogged\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { fetchPosts, fetchLatestPost }\n  )(Posts)\n);\n"]},"metadata":{},"sourceType":"module"}
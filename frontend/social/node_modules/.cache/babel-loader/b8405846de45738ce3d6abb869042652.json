{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { FETCH_POSTS, NEW_POST, FETCH_LATEST_POST, FETCH_USER_POSTS } from \"./types\";\nexport const fetchPosts = () => dispatch => {\n  axios.get(\"http://localhost:8000/posts/api/getPosts\").then(posts => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: posts.data\n    });\n  });\n};\nexport const fetchSpecificUserPosts = userName => dispatch => {\n  axios.get(\"http://localhost:8000/posts/api/getPosts?user=\" + userName).then(posts => {\n    dispatch({\n      type: FETCH_USER_POSTS,\n      payload: posts.data\n    });\n  }).catch(err => {\n    console.log(\"Are you sure you've written the correct username ?\");\n  });\n};\nexport const fetchLatestPost = () => dispatch => {\n  axios.get(\"http://localhost:8000/posts/api/getPosts?latest=true\").then(post => {\n    console.log(post);\n    dispatch({\n      type: FETCH_LATEST_POST,\n      payload: post.data\n    });\n  });\n};\nexport const addPost = postData => dispatch => {\n  const cookies = new Cookies();\n  const token = cookies.get(\"access\");\n  const authStr = \"Bearer \".concat(token);\n  console.log(authStr);\n  const bodyParameters = {\n    title: postData.title,\n    body: postData.body\n  };\n  axios.post(\"http://localhost:8000/posts/api/addPost\", bodyParameters, {\n    headers: {\n      Authorization: authStr\n    }\n  }).then(post => {\n    console.log(post);\n    dispatch({\n      type: NEW_POST,\n      payload: post.data\n    });\n  }).catch(err => {\n    alert(\"Are you connected ?\");\n  });\n};","map":{"version":3,"sources":["/home/raz/Projects/socialNet-dj-reactRedux/frontend/social/src/actions/postActions.js"],"names":["axios","Cookies","FETCH_POSTS","NEW_POST","FETCH_LATEST_POST","FETCH_USER_POSTS","fetchPosts","dispatch","get","then","posts","type","payload","data","fetchSpecificUserPosts","userName","catch","err","console","log","fetchLatestPost","post","addPost","postData","cookies","token","authStr","concat","bodyParameters","title","body","headers","Authorization","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACEC,WADF,EAEEC,QAFF,EAGEC,iBAHF,EAIEC,gBAJF,QAKO,SALP;AAOA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1CP,EAAAA,KAAK,CAACQ,GAAN,CAAU,0CAAV,EAAsDC,IAAtD,CAA2DC,KAAK,IAAI;AAClEH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAFR,KAAD,CAAR;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMC,sBAAsB,GAAGC,QAAQ,IAAIR,QAAQ,IAAI;AAC5DP,EAAAA,KAAK,CACFQ,GADH,CACO,mDAAmDO,QAD1D,EAEGN,IAFH,CAEQC,KAAK,IAAI;AACbH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEN,gBADC;AAEPO,MAAAA,OAAO,EAAEF,KAAK,CAACG;AAFR,KAAD,CAAR;AAID,GAPH,EAQGG,KARH,CAQSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACD,GAVH;AAWD,CAZM;AAcP,OAAO,MAAMC,eAAe,GAAG,MAAMb,QAAQ,IAAI;AAC/CP,EAAAA,KAAK,CACFQ,GADH,CACO,sDADP,EAEGC,IAFH,CAEQY,IAAI,IAAI;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAd,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,iBADC;AAEPQ,MAAAA,OAAO,EAAES,IAAI,CAACR;AAFP,KAAD,CAAR;AAID,GARH;AASD,CAVM;AAYP,OAAO,MAAMS,OAAO,GAAGC,QAAQ,IAAIhB,QAAQ,IAAI;AAC7C,QAAMiB,OAAO,GAAG,IAAIvB,OAAJ,EAAhB;AACA,QAAMwB,KAAK,GAAGD,OAAO,CAAChB,GAAR,CAAY,QAAZ,CAAd;AAEA,QAAMkB,OAAO,GAAG,UAAUC,MAAV,CAAiBF,KAAjB,CAAhB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,QAAME,cAAc,GAAG;AACrBC,IAAAA,KAAK,EAAEN,QAAQ,CAACM,KADK;AAErBC,IAAAA,IAAI,EAAEP,QAAQ,CAACO;AAFM,GAAvB;AAIA9B,EAAAA,KAAK,CACFqB,IADH,CACQ,yCADR,EACmDO,cADnD,EACmE;AAC/DG,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEN;AAAjB;AADsD,GADnE,EAIGjB,IAJH,CAIQY,IAAI,IAAI;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAd,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,QADC;AAEPS,MAAAA,OAAO,EAAES,IAAI,CAACR;AAFP,KAAD,CAAR;AAID,GAVH,EAWGG,KAXH,CAWSC,GAAG,IAAI;AACZgB,IAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,GAbH;AAcD,CAxBM","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nimport {\n  FETCH_POSTS,\n  NEW_POST,\n  FETCH_LATEST_POST,\n  FETCH_USER_POSTS\n} from \"./types\";\n\nexport const fetchPosts = () => dispatch => {\n  axios.get(\"http://localhost:8000/posts/api/getPosts\").then(posts => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: posts.data\n    });\n  });\n};\n\nexport const fetchSpecificUserPosts = userName => dispatch => {\n  axios\n    .get(\"http://localhost:8000/posts/api/getPosts?user=\" + userName)\n    .then(posts => {\n      dispatch({\n        type: FETCH_USER_POSTS,\n        payload: posts.data\n      });\n    })\n    .catch(err => {\n      console.log(\"Are you sure you've written the correct username ?\");\n    });\n};\n\nexport const fetchLatestPost = () => dispatch => {\n  axios\n    .get(\"http://localhost:8000/posts/api/getPosts?latest=true\")\n    .then(post => {\n      console.log(post);\n      dispatch({\n        type: FETCH_LATEST_POST,\n        payload: post.data\n      });\n    });\n};\n\nexport const addPost = postData => dispatch => {\n  const cookies = new Cookies();\n  const token = cookies.get(\"access\");\n\n  const authStr = \"Bearer \".concat(token);\n  console.log(authStr);\n  const bodyParameters = {\n    title: postData.title,\n    body: postData.body\n  };\n  axios\n    .post(\"http://localhost:8000/posts/api/addPost\", bodyParameters, {\n      headers: { Authorization: authStr }\n    })\n    .then(post => {\n      console.log(post);\n      dispatch({\n        type: NEW_POST,\n        payload: post.data\n      });\n    })\n    .catch(err => {\n      alert(\"Are you connected ?\");\n    });\n};\n"]},"metadata":{},"sourceType":"module"}
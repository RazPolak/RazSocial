{"ast":null,"code":"var _jsxFileName = \"/home/raz/Projects/socialNet-dj-reactRedux/frontend/social/src/Components/Posts.js\";\nimport React, { Component } from \"react\";\nimport { fetchPosts } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newPost = nextProps.newPost;\n    console.log(newPost);\n    console.log(this.props);\n\n    if (newPost) {\n      this.props.posts.unshift(newPost);\n    }\n  }\n\n  render() {\n    console.log(this.props.posts);\n    const postItems = this.props.posts.map(post => React.createElement(ListGroup.Item, {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, post.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), post.body, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), post.user));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, postItems);\n  }\n\n} // Posts.propTypes = {\n//   fetchPosts: PropTypes.func.isRequired,\n//   posts: PropTypes.array.isRequired\n// };\n\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/home/raz/Projects/socialNet-dj-reactRedux/frontend/social/src/Components/Posts.js"],"names":["React","Component","fetchPosts","connect","PropTypes","ListGroup","Posts","componentDidMount","props","componentWillReceiveProps","nextProps","newPost","console","log","posts","unshift","render","postItems","map","post","id","title","body","user","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWN,UAAX;AACD;;AAEDO,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,UAAMC,OAAO,GAAGD,SAAS,CAACC,OAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;;AACA,QAAIG,OAAJ,EAAa;AACX,WAAKH,KAAL,CAAWM,KAAX,CAAiBC,OAAjB,CAAyBJ,OAAzB;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,KAAvB;AACA,UAAMG,SAAS,GAAG,KAAKT,KAAL,CAAWM,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IACzC,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGF,IAAI,CAACG,IAHR,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGH,IAAI,CAACI,IALR,CADgB,CAAlB;AASA,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYN,SAAZ,CAAP;AACD;;AA1B2B,C,CA6B9B;AACA;AACA;AACA;;;AAEA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYY,KADa;AAEhCf,EAAAA,OAAO,EAAEc,KAAK,CAACX,KAAN,CAAYa;AAFW,CAAL,CAA7B;;AAKA,eAAexB,OAAO,CACpBqB,eADoB,EAEpB;AAAEtB,EAAAA;AAAF,CAFoB,CAAP,CAGbI,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { fetchPosts } from \"../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newPost = nextProps.newPost;\n    console.log(newPost);\n    console.log(this.props);\n    if (newPost) {\n      this.props.posts.unshift(newPost);\n    }\n  }\n\n  render() {\n    console.log(this.props.posts);\n    const postItems = this.props.posts.map(post => (\n      <ListGroup.Item key={post.id}>\n        <h4>{post.title}</h4>\n        <br />\n        {post.body}\n        <br />\n        {post.user}\n      </ListGroup.Item>\n    ));\n    return <ListGroup>{postItems}</ListGroup>;\n  }\n}\n\n// Posts.propTypes = {\n//   fetchPosts: PropTypes.func.isRequired,\n//   posts: PropTypes.array.isRequired\n// };\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}